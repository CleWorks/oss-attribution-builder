# WIP API description

openapi: '3.0.2'
info:
  title: 'oss-attribution-builder API'
  version: '1.0.0'
servers:
  - url: '/api/'
  - url: 'http://localhost:2424/api/'
security:
  - nullauth: []
  - cookie: []

tags:
  - name: projects
    description: Project management actions
  - name: attribution documents
    description: Attribution documents (contained within projects)
  - name: packages
    description: Package information

components:
  securitySchemes:
    nullauth:
      type: http
      scheme: basic
      description: Dummy authentication for the demo site. Use any username and password.

    cookie:
      type: apiKey
      in: cookie

  parameters:
    projectId:
      in: path
      name: projectId
      required: true
      schema:
        type: string
    documentId:
      in: path
      name: documentId
      required: true
      schema:
        type: number
    packageId:
      in: path
      name: packageId
      required: true
      schema:
        type: number

  schemas:
    Project:
      type: object
      properties:
        projectId:
          type: string
        title:
          type: string
        version:
          type: string
        description:
          type: string
        createdOn:
          type: string
        plannedRelease:
          type: string
          format: date
        contacts:
          $ref: '#/components/schemas/ProjectContacts'
        acl:
          $ref: '#/components/schemas/ProjectAcl'
        packagesUsed:
          type: array
          items:
            type: object
        refs:
          type: object
        metadata: {}
        access:
          type: object
          properties:
            level:
              type: string
            canEdit:
              type: boolean

    ProjectAcl:
      type: object
      additionalProperties:
        type: string
        enum:
          - owner
          - editor
          - viewer

    ProjectContacts:
      type: object
      additionalProperties:
        type: array
        items:
          type: array
          items:
            type: string

    Package:
      type: object
      properties:
        packageId:
          type: string
        name:
          type: string
        version:
          type: string
        website:
          type: string
        copyright:
          type: string
        license:
          type: string
        licenseText:
          type: string

    PackageWithUsage:
      type: object

    AttributionDocument:
      type: object
      properties:
        id:
          type: number
        projectId:
          type: string
        projectVersion:
          type: string
        createdOn:
          type: string
        createdBy:
          type: string
        content:
          type: string

    ProjectChangeItem:
      type: object
      properties:
        id:
          type: number
        projectId:
          type: string
        who:
          type: string
        changedOn:
          type: string
          format: date-time
        changedTo:
          type: object

paths:
  /v1/info:
    get:
      summary: get session info
      responses:
        200:
          description: current user's session info
          content:
            application/json:
              schema:
                type: object
                properties:
                  displayName:
                    type: string
                  groups:
                    type: array
                    items:
                      type: string
                  permissions:
                    type: object
                    properties:
                      admin:
                        type: boolean

  /v1/projects:
    get:
      summary: get all accessible projects
      tags:
        - projects
      responses:
        200:
          description: list of projects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    projectId:
                      type: string
                    title:
                      type: string
                    version:
                      type: string
                    createdOn:
                      type: string

  /v1/projects/new:
    post:
      summary: create a new project
      tags:
        - projects

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                version:
                  type: string
                description:
                  type: string
                plannedRelease:
                  type: string
                contacts:
                  $ref: '#/components/schemas/ProjectContacts'
                acl:
                  $ref: '#/components/schemas/ProjectAcl'
                metadata:
                  type: object
            example:
              title: 'My First Project'
              version: '1.0.0'
              description: 'My project created via the API'
              plannedRelease: '2099-01-01'
              contacts:
                legal: ['me']
              acl:
                everyone: 'owner'
              metadata: {}

      responses:
        200:
          description: project created
          content:
            application/json:
              schema:
                type: object
                properties:
                  projectId:
                    type: string

  /v1/projects/{projectId}:
    get:
      summary: get project by id
      tags:
        - projects
      parameters:
        - $ref: '#/components/parameters/projectId'
      responses:
        200:
          description: project details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'

    patch:
      summary: edit project details
      description: Selectively edit primary details of a project. Any fields not included will not be modified.
      tags:
        - projects
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: []
              properties:
                title:
                  type: string
                  required: false
                version:
                  type: string
                  required: false
                description:
                  type: string
                  required: false
                plannedRelease:
                  type: string
                  required: false
                contacts:
                  type: object
                  required: false
                acl:
                  type: object
                  required: false
                metadata:
                  type: object
                  required: false
            example:
              title: 'My new project title'
      responses:
        200:
          description: successfully edited project

  /v1/projects/{projectId}/attach:
    post:
      summary: attach a package to the project
      tags:
        - projects
        - packages
      parameters:
        - $ref: '#/components/parameters/projectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                packageId:
                  type: string
                name:
                  type: string
                version:
                  type: string
                website:
                  type: string
                copyright:
                  type: string
                license:
                  type: string
                licenseText:
                  type: string
                usage:
                  type: object
            examples:
              add-single-package:
                summary: add a package by ID only
                value:
                  packageId: 12345

      responses:
        200:
          description: package was attached

  /v1/projects/{projectId}/build:
    get:
      summary: preview attribution document and annotations
      tags:
        - projects
      parameters:
        - $ref: '#/components/parameters/projectId'

      responses:
        200:
          description: attribution document preview and annotations
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object # TODO
                      properties:
                        lines:
                          type: array
                          minItems: 2
                          maxItems: 2
                        type:
                          type: string
                  summary:
                    type: object

    post:
      summary: generate and store attribution document
      tags:
        - projects
        - attribution documents
      parameters:
        - $ref: '#/components/parameters/projectId'

      responses:
        200:
          description: attribution document preview and annotations
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                  documentId:
                    type: number

  /v1/projects/{projectId}/docs:
    get:
      summary: list project's stored attribution documents
      tags:
        - projects
        - attribution documents
      parameters:
        - $ref: '#/components/parameters/projectId'

      responses:
        200:
          description: a list of all attribution documents attached to this project
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        projectVersion:
                          type: string
                        createdOn:
                          type: string
                        createdBy:
                          type: string

  /v1/projects/{projectId}/docs/{documentId}:
    get:
      summary: fetch a rendered attribution document
      description: Fetches an attribution document attached to a project. Includes information about when the document was created; a plain-text-only version can be fetched by appending `.text` to the end of the URL.
      tags:
        - projects
        - attribution documents
      parameters:
        - $ref: '#/components/parameters/projectId'
        - $ref: '#/components/parameters/documentId'

      responses:
        200:
          description: a rendered attribution document with details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributionDocument'

  /v1/projects/{projectId}/clone:
    post:
      summary: clone a project
      description: Clone a project. Can clone any project you can view. The title, version, and ACL can all be changed with this call. Your ACL must specify an owning group that you are a member of.
      tags:
        - projects
      parameters:
        - $ref: '#/components/parameters/projectId'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                version:
                  type: string
                acl:
                  $ref: '#/components/schemas/ProjectAcl'
            example:
              title: 'My Cloned Project'
              version: '1.0.0-cloned'
              acl:
                everyone: 'owner'

      responses:
        200:
          description: project cloned
          content:
            application/json:
              schema:
                type: object
                properties:
                  projectId:
                    type: string

  /v1/projects/{projectId}/changes:
    get:
      summary: list project's change log
      tags:
        - projects
      parameters:
        - $ref: '#/components/parameters/projectId'

      responses:
        200:
          description: A list of all changes made to this project, most recent first. Note that the changedTo field uses database table names, which don't necessarily map 1:1 to the API.
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectChangeItem'

  /v1/packages/:
    post:
      summary: search packages
      tags:
        - packages

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string

      responses:
        200:
          description: search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Package'

  /v1/packages/{packageId}:
    get:
      summary: get a single package
      tags:
        - packages

      parameters:
        - $ref: '#/components/parameters/packageId'

      responses:
        200:
          description: content of package
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
